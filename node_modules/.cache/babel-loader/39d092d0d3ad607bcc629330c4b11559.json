{"ast":null,"code":"var _jsxFileName = \"/home/fabian/Documents/d3Js/networks/network-react/chart-d3js-react/src/drawGrapho.js\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { layout, select, scaleLinear, extent } from \"d3\";\n\nconst styleDefs = require(\"./bar.scss\");\n\nfunction RandomData() {\n  const data = [...Array(10)].map((e, i) => {\n    return {\n      x: i,\n      y: Math.random() * 40,\n      temparature: Math.random() * 500\n    };\n  });\n  return data;\n}\n\nconst width = 600; //Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\nconst height = 500; //Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\nconst DrawGrapho = props => {\n  useEffect(() => {\n    d3.select('.drawGrapho > *').remove();\n    draw(props);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drawGrapho\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  });\n};\n\nconst draw = props => {\n  var color = d3.scale.category10();\n  var force = d3.layout.force().charge(-120).linkDistance(30).size([width, heigth]);\n  var svg = d3.select('.drawGrapho').select('svg');\n\n  if (svg.empty()) {\n    svg = d3.select('.drawGrapho').append(\"svg\").attr(\"height\", height).attr(\"width\", width);\n  }\n\n  d3.json('graph.json', function (error, graph) {\n    if (error) {\n      console.console.error('Error accessing or parsing the JSON file.');\n      return error;\n    }\n\n    console.log(data);\n  });\n  console.log(props.data);\n};\n\nexport default DrawGrapho;","map":{"version":3,"sources":["/home/fabian/Documents/d3Js/networks/network-react/chart-d3js-react/src/drawGrapho.js"],"names":["React","useEffect","d3","layout","select","scaleLinear","extent","styleDefs","require","RandomData","data","Array","map","e","i","x","y","Math","random","temparature","width","height","DrawGrapho","props","remove","draw","color","scale","category10","force","charge","linkDistance","size","heigth","svg","empty","append","attr","json","error","graph","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,WAAzB,EAAsCC,MAAtC,QAAoD,IAApD;;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB;;AAGA,SAASC,UAAT,GAAsB;AACpB,QAAMC,IAAI,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxC,WAAO;AACLC,MAAAA,CAAC,EAAED,CADE;AAELE,MAAAA,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB,EAFd;AAGLC,MAAAA,WAAW,EAAEF,IAAI,CAACC,MAAL,KAAgB;AAHxB,KAAP;AAKD,GANY,CAAb;AAOA,SAAOR,IAAP;AACD;;AAED,MAAMU,KAAK,GAAG,GAAd,C,CAAkB;;AAClB,MAAMC,MAAM,GAAG,GAAf,C,CAAmB;;AAEnB,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BtB,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,EAAE,CAACE,MAAH,CAAU,iBAAV,EAA6BoB,MAA7B;AACAC,IAAAA,IAAI,CAACF,KAAD,CAAJ;AACD,GAHS,EAGR,CAACA,KAAD,CAHQ,CAAT;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAND;;AAQA,MAAME,IAAI,GAAIF,KAAD,IAAW;AAEtB,MAAIG,KAAK,GAAGxB,EAAE,CAACyB,KAAH,CAASC,UAAT,EAAZ;AAEA,MAAIC,KAAK,GAAG3B,EAAE,CAACC,MAAH,CAAU0B,KAAV,GACTC,MADS,CACF,CAAC,GADC,EAETC,YAFS,CAEI,EAFJ,EAGTC,IAHS,CAGJ,CAACZ,KAAD,EAAQa,MAAR,CAHI,CAAZ;AAMA,MAAKC,GAAG,GAAGhC,EAAE,CAACE,MAAH,CAAU,aAAV,EAAyBA,MAAzB,CAAgC,KAAhC,CAAX;;AACE,MAAG8B,GAAG,CAACC,KAAJ,EAAH,EAAe;AACbD,IAAAA,GAAG,GAAGhC,EAAE,CAACE,MAAH,CAAU,aAAV,EAAyBgC,MAAzB,CAAgC,KAAhC,EACHC,IADG,CACE,QADF,EACYhB,MADZ,EAEHgB,IAFG,CAEE,OAFF,EAEWjB,KAFX,CAAN;AAGD;;AAEHlB,EAAAA,EAAE,CAACoC,IAAH,CAAQ,YAAR,EAAsB,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC3C,QAAGD,KAAH,EAAS;AACPE,MAAAA,OAAO,CAACA,OAAR,CAAgBF,KAAhB,CAAsB,2CAAtB;AACE,aAAOA,KAAP;AACH;;AACCE,IAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAZ;AACH,GAND;AAQA+B,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACb,IAAlB;AACC,CA1BH;;AA4BA,eAAeY,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { layout, select, scaleLinear, extent } from \"d3\";\n\nconst styleDefs = require(\"./bar.scss\");\n\n\nfunction RandomData() {\n  const data = [...Array(10)].map((e, i) => {\n    return {\n      x: i,\n      y: Math.random() * 40,\n      temparature: Math.random() * 500\n    };\n  });\n  return data;\n}\n\nconst width = 600 //Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\nconst height = 500 //Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\nconst DrawGrapho = (props) => {\n  useEffect(() => {\n   d3.select('.drawGrapho > *').remove();\n   draw(props)\n },[props])\n  return <div className=\"drawGrapho\" />\n}\n\nconst draw = (props) => {\n\n  var color = d3.scale.category10();\n\n  var force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30)\n    .size([width, heigth]);\n\n\n  var  svg = d3.select('.drawGrapho').select('svg')\n    if(svg.empty()){\n      svg = d3.select('.drawGrapho').append(\"svg\")\n        .attr(\"height\", height)\n        .attr(\"width\", width)\n    }\n\n  d3.json('graph.json', function(error, graph) {\n    if(error){\n      console.console.error('Error accessing or parsing the JSON file.');\n        return error;\n    }\n      console.log(data);\n  });\n\n  console.log(props.data);\n  }\n\nexport default DrawGrapho\n"]},"metadata":{},"sourceType":"module"}