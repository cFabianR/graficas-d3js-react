{"ast":null,"code":"var _jsxFileName = \"/home/fabian/Documents/d3Js/networks/network-react/chart-d3js-react/src/drawGrapho2.js\";\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { layout, select, scaleLinear, extent } from \"d3\";\n\nconst styleDefs = require(\"./bar.scss\");\n\nconst width = 600; //Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\nconst height = 500; //Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\nconst DrawGrapho2 = props => {\n  useEffect(() => {\n    d3.select('.drawGrapho > *').remove();\n    draw(props);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drawGrapho\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  });\n};\n\nvar baseNodes = [{\n  id: \"mammal\",\n  group: 0,\n  label: \"Mammals\",\n  level: 1\n}, {\n  id: \"dog\",\n  group: 0,\n  label: \"Dogs\",\n  level: 2\n}, {\n  id: \"cat\",\n  group: 0,\n  label: \"Cats\",\n  level: 2\n}, {\n  id: \"fox\",\n  group: 0,\n  label: \"Foxes\",\n  level: 2\n}, {\n  id: \"elk\",\n  group: 0,\n  label: \"Elk\",\n  level: 2\n}, {\n  id: \"insect\",\n  group: 1,\n  label: \"Insects\",\n  level: 1\n}, {\n  id: \"ant\",\n  group: 1,\n  label: \"Ants\",\n  level: 2\n}, {\n  id: \"bee\",\n  group: 1,\n  label: \"Bees\",\n  level: 2\n}, {\n  id: \"fish\",\n  group: 2,\n  label: \"Fish\",\n  level: 1\n}, {\n  id: \"carp\",\n  group: 2,\n  label: \"Carp\",\n  level: 2\n}, {\n  id: \"pike\",\n  group: 2,\n  label: \"Pikes\",\n  level: 2\n}];\nvar baseLinks = [{\n  target: \"mammal\",\n  source: \"dog\",\n  strength: 0.7\n}, {\n  target: \"mammal\",\n  source: \"cat\",\n  strength: 0.7\n}, {\n  target: \"mammal\",\n  source: \"fox\",\n  strength: 0.7\n}, {\n  target: \"mammal\",\n  source: \"elk\",\n  strength: 0.7\n}, {\n  target: \"insect\",\n  source: \"ant\",\n  strength: 0.7\n}, {\n  target: \"insect\",\n  source: \"bee\",\n  strength: 0.7\n}, {\n  target: \"fish\",\n  source: \"carp\",\n  strength: 0.7\n}, {\n  target: \"fish\",\n  source: \"pike\",\n  strength: 0.7\n}, {\n  target: \"cat\",\n  source: \"elk\",\n  strength: 0.1\n}, {\n  target: \"carp\",\n  source: \"ant\",\n  strength: 0.1\n}, {\n  target: \"elk\",\n  source: \"bee\",\n  strength: 0.1\n}, {\n  target: \"dog\",\n  source: \"cat\",\n  strength: 0.1\n}, {\n  target: \"fox\",\n  source: \"ant\",\n  strength: 0.1\n}, {\n  target: \"pike\",\n  source: \"cat\",\n  strength: 0.1\n}];\nvar nodes = [...baseNodes];\nvar links = [...baseLinks];\n\nfunction getNeighbors(node) {\n  return baseLinks.reduce(function (neighbors, link) {\n    if (link.target.id === node.id) {\n      neighbors.push(link.source.id);\n    } else if (link.source.id === node.id) {\n      neighbors.push(link.target.id);\n    }\n\n    return neighbors;\n  }, [node.id]);\n}\n\nfunction isNeighborLink(node, link) {\n  return link.target.id === node.id || link.source.id === node.id;\n}\n\nfunction getNodeColor(node, neighbors) {\n  if (Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1) {\n    return node.level === 1 ? 'blue' : 'green';\n  }\n\n  return node.level === 1 ? 'red' : 'gray';\n}\n\nfunction getLinkColor(node, link) {\n  return isNeighborLink(node, link) ? 'green' : '#E5E5E5';\n}\n\nfunction getTextColor(node, neighbors) {\n  return Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1 ? 'green' : 'black';\n}\n\nconst draw = props => {\n  function getNodeColor(node) {\n    return node.level === 1 ? 'red' : 'gray';\n  }\n\n  var svg = d3.select(\".drawGrapho\").append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  var linkElements, nodeElements, textElements; // we use svg groups to logically group the elements together\n\n  var linkGroup = svg.append('g').attr('class', 'links');\n  var nodeGroup = svg.append('g').attr('class', 'nodes');\n  var textGroup = svg.append('g').attr('class', 'texts'); // we use this reference to select/deselect\n  // after clicking the same element twice\n\n  var selectedId; // simulation setup with all forces\n\n  var linkForce = d3.forceLink().id(function (link) {\n    return link.id;\n  }).strength(function (link) {\n    return link.strength;\n  });\n  var simulation = d3.forceSimulation().force('link', linkForce).force('charge', d3.forceManyBody().strength(-120)).force('center', d3.forceCenter(width / 2, height / 2));\n  var dragDrop = d3.drag().on('start', function (node) {\n    node.fx = node.x;\n    node.fy = node.y;\n  }).on('drag', function (node) {\n    simulation.alphaTarget(0.7).restart();\n    node.fx = d3.event.x;\n    node.fy = d3.event.y;\n  }).on('end', function (node) {\n    if (!d3.event.active) {\n      simulation.alphaTarget(0);\n    }\n\n    node.fx = null;\n    node.fy = null;\n  }); // select node is called on every click\n  // we either update the data according to the selection\n  // or reset the data if the same node is clicked twice\n\n  function selectNode(selectedNode) {\n    if (selectedId === selectedNode.id) {\n      selectedId = undefined;\n      resetData();\n      updateSimulation();\n    } else {\n      selectedId = selectedNode.id;\n      updateData(selectedNode);\n      updateSimulation();\n    }\n\n    var neighbors = getNeighbors(selectedNode); // we modify the styles to highlight selected nodes\n\n    nodeElements.attr('fill', function (node) {\n      return getNodeColor(node, neighbors);\n    });\n    textElements.attr('fill', function (node) {\n      return getTextColor(node, neighbors);\n    });\n    linkElements.attr('stroke', function (link) {\n      return getLinkColor(selectedNode, link);\n    });\n  } // this helper simple adds all nodes and links\n  // that are missing, to recreate the initial state\n\n\n  function resetData() {\n    var nodeIds = nodes.map(function (node) {\n      return node.id;\n    });\n    baseNodes.forEach(function (node) {\n      if (nodeIds.indexOf(node.id) === -1) {\n        nodes.push(node);\n      }\n    });\n    links = baseLinks;\n  } // diffing and mutating the data\n\n\n  function updateData(selectedNode) {\n    var neighbors = getNeighbors(selectedNode);\n    var newNodes = baseNodes.filter(function (node) {\n      return neighbors.indexOf(node.id) > -1 || node.level === 1;\n    });\n    var diff = {\n      removed: nodes.filter(function (node) {\n        return newNodes.indexOf(node) === -1;\n      }),\n      added: newNodes.filter(function (node) {\n        return nodes.indexOf(node) === -1;\n      })\n    };\n    diff.removed.forEach(function (node) {\n      nodes.splice(nodes.indexOf(node), 1);\n    });\n    diff.added.forEach(function (node) {\n      nodes.push(node);\n    });\n    links = baseLinks.filter(function (link) {\n      return link.target.id === selectedNode.id || link.source.id === selectedNode.id;\n    });\n  }\n\n  function updateGraph() {\n    // links\n    linkElements = linkGroup.selectAll('line').data(links, function (link) {\n      return link.target.id + link.source.id;\n    });\n    linkElements.exit().remove();\n    var linkEnter = linkElements.enter().append('line').attr('stroke-width', 1).attr('stroke', 'rgba(50, 50, 50, 0.2)');\n    linkElements = linkEnter.merge(linkElements); // nodes\n\n    nodeElements = nodeGroup.selectAll('circle').data(nodes, function (node) {\n      return node.id;\n    });\n    nodeElements.exit().remove();\n    var nodeEnter = nodeElements.enter().append('circle').attr('r', 10).attr('fill', function (node) {\n      return node.level === 1 ? 'red' : 'gray';\n    }).call(dragDrop) // we link the selectNode method here\n    // to update the graph on every click\n    .on('click', selectNode);\n    nodeElements = nodeEnter.merge(nodeElements); // texts\n\n    textElements = textGroup.selectAll('text').data(nodes, function (node) {\n      return node.id;\n    });\n    textElements.exit().remove();\n    var textEnter = textElements.enter().append('text').text(function (node) {\n      return node.label;\n    }).attr('font-size', 15).attr('dx', 15).attr('dy', 4);\n    textElements = textEnter.merge(textElements);\n  }\n\n  function updateSimulation() {\n    updateGraph();\n    simulation.nodes(nodes).on('tick', () => {\n      nodeElements.attr('cx', function (node) {\n        return node.x;\n      }).attr('cy', function (node) {\n        return node.y;\n      });\n      textElements.attr('x', function (node) {\n        return node.x;\n      }).attr('y', function (node) {\n        return node.y;\n      });\n      linkElements.attr('x1', function (link) {\n        return link.source.x;\n      }).attr('y1', function (link) {\n        return link.source.y;\n      }).attr('x2', function (link) {\n        return link.target.x;\n      }).attr('y2', function (link) {\n        return link.target.y;\n      });\n    });\n    simulation.force('link').links(links);\n    simulation.alphaTarget(0.7).restart();\n  } // last but not least, we call updateSimulation\n  // to trigger the initial render\n\n\n  updateSimulation();\n};\n\nexport default DrawGrapho;","map":{"version":3,"sources":["/home/fabian/Documents/d3Js/networks/network-react/chart-d3js-react/src/drawGrapho2.js"],"names":["React","useEffect","d3","layout","select","scaleLinear","extent","styleDefs","require","width","height","DrawGrapho2","props","remove","draw","baseNodes","id","group","label","level","baseLinks","target","source","strength","nodes","links","getNeighbors","node","reduce","neighbors","link","push","isNeighborLink","getNodeColor","Array","isArray","indexOf","getLinkColor","getTextColor","svg","append","attr","linkElements","nodeElements","textElements","linkGroup","nodeGroup","textGroup","selectedId","linkForce","forceLink","simulation","forceSimulation","force","forceManyBody","forceCenter","dragDrop","drag","on","fx","x","fy","y","alphaTarget","restart","event","active","selectNode","selectedNode","undefined","resetData","updateSimulation","updateData","nodeIds","map","forEach","newNodes","filter","diff","removed","added","splice","updateGraph","selectAll","data","exit","linkEnter","enter","merge","nodeEnter","call","textEnter","text","DrawGrapho"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { layout, select, scaleLinear, extent } from \"d3\";\n\nconst styleDefs = require(\"./bar.scss\");\n\nconst width = 600 //Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\nconst height = 500 //Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\nconst DrawGrapho2 = (props) => {\n  useEffect(() => {\n   d3.select('.drawGrapho > *').remove();\n   draw(props)\n },[props])\n  return <div className=\"drawGrapho\" />\n}\n\nvar baseNodes = [\n  { id: \"mammal\", group: 0, label: \"Mammals\", level: 1 },\n  { id: \"dog\"   , group: 0, label: \"Dogs\"   , level: 2 },\n  { id: \"cat\"   , group: 0, label: \"Cats\"   , level: 2 },\n  { id: \"fox\"   , group: 0, label: \"Foxes\"  , level: 2 },\n  { id: \"elk\"   , group: 0, label: \"Elk\"    , level: 2 },\n  { id: \"insect\", group: 1, label: \"Insects\", level: 1 },\n  { id: \"ant\"   , group: 1, label: \"Ants\"   , level: 2 },\n  { id: \"bee\"   , group: 1, label: \"Bees\"   , level: 2 },\n  { id: \"fish\"  , group: 2, label: \"Fish\"   , level: 1 },\n  { id: \"carp\"  , group: 2, label: \"Carp\"   , level: 2 },\n  { id: \"pike\"  , group: 2, label: \"Pikes\"  , level: 2 }\n]\n\nvar baseLinks = [\n\t{ target: \"mammal\", source: \"dog\" , strength: 0.7 },\n\t{ target: \"mammal\", source: \"cat\" , strength: 0.7 },\n  { target: \"mammal\", source: \"fox\" , strength: 0.7 },\n  { target: \"mammal\", source: \"elk\" , strength: 0.7 },\n  { target: \"insect\", source: \"ant\" , strength: 0.7 },\n  { target: \"insect\", source: \"bee\" , strength: 0.7 },\n  { target: \"fish\"  , source: \"carp\", strength: 0.7 },\n  { target: \"fish\"  , source: \"pike\", strength: 0.7 },\n  { target: \"cat\"   , source: \"elk\" , strength: 0.1 },\n  { target: \"carp\"  , source: \"ant\" , strength: 0.1 },\n  { target: \"elk\"   , source: \"bee\" , strength: 0.1 },\n  { target: \"dog\"   , source: \"cat\" , strength: 0.1 },\n  { target: \"fox\"   , source: \"ant\" , strength: 0.1 },\n\t{ target: \"pike\"  , source: \"cat\" , strength: 0.1 }\n]\n\nvar nodes = [...baseNodes]\nvar links = [...baseLinks]\n\nfunction getNeighbors(node) {\n  return baseLinks.reduce(function (neighbors, link) {\n      if (link.target.id === node.id) {\n        neighbors.push(link.source.id)\n      } else if (link.source.id === node.id) {\n        neighbors.push(link.target.id)\n      }\n      return neighbors\n    },\n    [node.id]\n  )\n}\n\nfunction isNeighborLink(node, link) {\n  return link.target.id === node.id || link.source.id === node.id\n}\n\nfunction getNodeColor(node, neighbors) {\n  if (Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1) {\n    return node.level === 1 ? 'blue' : 'green'\n  }\n\n  return node.level === 1 ? 'red' : 'gray'\n}\n\n\nfunction getLinkColor(node, link) {\n  return isNeighborLink(node, link) ? 'green' : '#E5E5E5'\n}\n\nfunction getTextColor(node, neighbors) {\n  return Array.isArray(neighbors) && neighbors.indexOf(node.id) > -1 ? 'green' : 'black'\n}\n\n\nconst draw = (props) => {\n\n  function getNodeColor(node) {\n    return node.level === 1 ? 'red' : 'gray'\n  }\n\n  var svg = d3.select(\".drawGrapho\").append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n  var linkElements,\n      nodeElements,\n      textElements\n\n  // we use svg groups to logically group the elements together\n  var linkGroup = svg.append('g').attr('class', 'links')\n  var nodeGroup = svg.append('g').attr('class', 'nodes')\n  var textGroup = svg.append('g').attr('class', 'texts')\n\n  // we use this reference to select/deselect\n  // after clicking the same element twice\n  var selectedId\n\n  // simulation setup with all forces\n  var linkForce = d3\n    .forceLink()\n    .id(function (link) { return link.id })\n    .strength(function (link) { return link.strength })\n\n  var simulation = d3\n    .forceSimulation()\n    .force('link', linkForce)\n    .force('charge', d3.forceManyBody().strength(-120))\n    .force('center', d3.forceCenter(width / 2, height / 2))\n\n  var dragDrop = d3.drag().on('start', function (node) {\n    node.fx = node.x\n    node.fy = node.y\n  }).on('drag', function (node) {\n    simulation.alphaTarget(0.7).restart()\n    node.fx = d3.event.x\n    node.fy = d3.event.y\n  }).on('end', function (node) {\n    if (!d3.event.active) {\n      simulation.alphaTarget(0)\n    }\n    node.fx = null\n    node.fy = null\n  })\n\n  // select node is called on every click\n  // we either update the data according to the selection\n  // or reset the data if the same node is clicked twice\n  function selectNode(selectedNode) {\n    if (selectedId === selectedNode.id) {\n      selectedId = undefined\n      resetData()\n      updateSimulation()\n    } else {\n      selectedId = selectedNode.id\n      updateData(selectedNode)\n      updateSimulation()\n    }\n\n    var neighbors = getNeighbors(selectedNode)\n\n    // we modify the styles to highlight selected nodes\n    nodeElements.attr('fill', function (node) { return getNodeColor(node, neighbors) })\n    textElements.attr('fill', function (node) { return getTextColor(node, neighbors) })\n    linkElements.attr('stroke', function (link) { return getLinkColor(selectedNode, link) })\n  }\n\n  // this helper simple adds all nodes and links\n  // that are missing, to recreate the initial state\n  function resetData() {\n    var nodeIds = nodes.map(function (node) { return node.id })\n\n    baseNodes.forEach(function (node) {\n      if (nodeIds.indexOf(node.id) === -1) {\n        nodes.push(node)\n      }\n    })\n\n    links = baseLinks\n  }\n\n  // diffing and mutating the data\n  function updateData(selectedNode) {\n    var neighbors = getNeighbors(selectedNode)\n    var newNodes = baseNodes.filter(function (node) {\n      return neighbors.indexOf(node.id) > -1 || node.level === 1\n    })\n\n    var diff = {\n      removed: nodes.filter(function (node) { return newNodes.indexOf(node) === -1 }),\n      added: newNodes.filter(function (node) { return nodes.indexOf(node) === -1 })\n    }\n\n    diff.removed.forEach(function (node) { nodes.splice(nodes.indexOf(node), 1) })\n    diff.added.forEach(function (node) { nodes.push(node) })\n\n    links = baseLinks.filter(function (link) {\n      return link.target.id === selectedNode.id || link.source.id === selectedNode.id\n    })\n  }\n\n  function updateGraph() {\n    // links\n    linkElements = linkGroup.selectAll('line')\n      .data(links, function (link) {\n        return link.target.id + link.source.id\n      })\n\n    linkElements.exit().remove()\n\n    var linkEnter = linkElements\n      .enter().append('line')\n      .attr('stroke-width', 1)\n      .attr('stroke', 'rgba(50, 50, 50, 0.2)')\n\n    linkElements = linkEnter.merge(linkElements)\n\n    // nodes\n    nodeElements = nodeGroup.selectAll('circle')\n      .data(nodes, function (node) { return node.id })\n\n    nodeElements.exit().remove()\n\n    var nodeEnter = nodeElements\n      .enter()\n      .append('circle')\n      .attr('r', 10)\n      .attr('fill', function (node) { return node.level === 1 ? 'red' : 'gray' })\n      .call(dragDrop)\n      // we link the selectNode method here\n      // to update the graph on every click\n      .on('click', selectNode)\n\n    nodeElements = nodeEnter.merge(nodeElements)\n\n    // texts\n    textElements = textGroup.selectAll('text')\n      .data(nodes, function (node) { return node.id })\n\n    textElements.exit().remove()\n\n    var textEnter = textElements\n      .enter()\n      .append('text')\n      .text(function (node) { return node.label })\n      .attr('font-size', 15)\n      .attr('dx', 15)\n      .attr('dy', 4)\n\n    textElements = textEnter.merge(textElements)\n  }\n\n  function updateSimulation() {\n    updateGraph()\n\n    simulation.nodes(nodes).on('tick', () => {\n      nodeElements\n        .attr('cx', function (node) { return node.x })\n        .attr('cy', function (node) { return node.y })\n      textElements\n        .attr('x', function (node) { return node.x })\n        .attr('y', function (node) { return node.y })\n      linkElements\n        .attr('x1', function (link) { return link.source.x })\n        .attr('y1', function (link) { return link.source.y })\n        .attr('x2', function (link) { return link.target.x })\n        .attr('y2', function (link) { return link.target.y })\n    })\n\n    simulation.force('link').links(links)\n    simulation.alphaTarget(0.7).restart()\n  }\n\n  // last but not least, we call updateSimulation\n  // to trigger the initial render\n  updateSimulation()\n\n\n}\nexport default DrawGrapho\n"]},"metadata":{},"sourceType":"module"}